# These workflows don't really work yet. Created only to show usage of Scpetre Github Action.
name: Deploy ECS CF using Sceptre - controlled flow
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

env:
  CONTAINER_IMAGE_DEV: "us-docker.pkg.dev/my-project/my-repo/my-image" 
  CONTAINER_IMAGE_STG: "us-docker.pkg.dev/my-project/my-repo/my-image" 
  CONTAINER_IMAGE_PROD: "us-docker.pkg.dev/my-project/my-repo/my-image" 

jobs:
  deploy_ecs_development:
    name: 'Deploy to development'
    runs-on: ubuntu-latest
    environment: development
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        target: [au, us]
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
          aws-region: aws-region-1
      - name: Sceptre validate ecs template
        uses: Sceptre/github-ci-action@master
        with:
          sceptre_version: '4.2.2'
          sceptre_directory: 'infra'
          sceptre_subcommand: '--var CONTAINER_IMAGE=$CONTAINER_IMAGE_DEV validate development/${{ matrix.target }}/ecs.yaml'
      - name: Sceptre launch creation/updation ecs
        uses: Sceptre/github-ci-action@master
        with:
          sceptre_version: '4.2.2'
          sceptre_directory: 'infra'
          sceptre_subcommand: '--var CONTAINER_IMAGE=$CONTAINER_IMAGE_DEV create development/${{ matrix.target }}/ecs.yaml'
    
  deploy_ecs_staging:
    name: 'Deploy to staging'
    needs: [ deploy_ecs_development ]
    runs-on: ubuntu-latest
    environment: staging
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        target: [au, us]
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
          aws-region: aws-region-1
      - name: Sceptre validate ecs template
        uses: Sceptre/github-ci-action@master
        with:
          sceptre_version: '4.2.2'
          sceptre_directory: 'infra'
          sceptre_subcommand: '--var CONTAINER_IMAGE=$CONTAINER_IMAGE_STG validate staging/${{ matrix.target }}/ecs.yaml'
      - name: Sceptre launch creation/updation ecs
        uses: Sceptre/github-ci-action@master
        with:
          sceptre_version: '4.2.2'
          sceptre_directory: 'infra'
          sceptre_subcommand: '--var CONTAINER_IMAGE=$CONTAINER_IMAGE_STG create staging/${{ matrix.target }}/ecs.yaml'
  
  deploy_ecs_production:
    name: 'Deploy to production'
    needs: [ deploy_ecs_development, deploy_ecs_staging ]
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        target: [au, us]
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: arn:aws:iam::123456789012:role/my-github-actions-role
          aws-region: aws-region-1
      - name: Sceptre validate ecs template
        uses: Sceptre/github-ci-action@master
        with:
          sceptre_version: '4.2.2'
          sceptre_directory: 'infra'
          sceptre_subcommand: '--var CONTAINER_IMAGE=$CONTAINER_IMAGE_PROD validate production/${{ matrix.target }}/ecs.yaml'
      - name: Sceptre launch creation/updation ecs
        uses: Sceptre/github-ci-action@master
        with:
          sceptre_version: '4.2.2'
          sceptre_directory: 'infra'
          sceptre_subcommand: '--var CONTAINER_IMAGE=$CONTAINER_IMAGE_PROD create production/${{ matrix.target }}/ecs.yaml'